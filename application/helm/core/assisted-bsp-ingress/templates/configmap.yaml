apiVersion: v1
kind: ConfigMap
metadata:
  name: assisted-ingress-conf
  namespace: {{ .Release.Namespace }}
data:
  location.list: |-
{{ if .Values.location_list }}
{{ .Values.location_list | indent 4 }}
{{ else }}
location / {
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    add_header 'Content-Length' 0;
    return 204;
 }
 if ($request_method = 'POST') {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
 }
 if ($request_method = 'GET') {
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Credentials' 'true';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
 }
  # proxy_http_version 1.1;
  # proxy_set_header Connection "";
  # proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Host dev-assisted-bsp.s3-website.ap-south-1.amazonaws.com;
  resolver 8.8.8.8;
  proxy_pass  http://dev-assisted-bsp.s3-website.ap-south-1.amazonaws.com/;
  # proxy_ssl_name dev-beneficiary-app.s3-website.ap-south-1.amazonaws.com;
  # proxy_ssl_server_name on;
  }
{{ end }}
  sites.conf: |-
{{ if .Values.sites_conf }}
{{ if .Values.hcx_ssl.enabled }}
{{ .Values.sites_conf | indent 4 }}
{{ else }}
    # Ref: https://github.com/openresty/openresty/#resolvconf-parsing
    resolver local=on;
    # Need real ip address for flags in replay.
    # Some LBs will forward real ips as x-forwarded-for
    # So making that as priority
    map $http_x_forwarded_for $real_ip {
        ~^(\d+\.\d+\.\d+\.\d+) $1;
        default $remote_addr;
    }
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }
    server {
      listen 80 default_server;
      listen [::]:80 default_server;
      # server_name _;
      include /etc/nginx/conf.d/location.list;
    }
{{ end }}
{{ end }}